#include <bits\stdc++.h>
// target hai first node ka address lena;agar wo mil jayega to poora list mil jayega
class Node
{
public:
    int data;
    Node *next;
    Node(int data)
    {
        this->data = data;
        this->next = NULL;
    }
};
Node *takeInput()
{ // head node return karta hai function
  // hum yahan pr size nhi poochte coz size constraint ko remove krne k liye hi ll use kiya tha
  // daigram video se dekh lena
    int data;
    printf("Enter data for the node");
    scanf("%d", &data);
    Node *head = NULL; // pointer var head banaya jo ki abhi null ko piint kr rha hai
                       // using this as a terminating condition
                       // n ka static creation hai to next itertaion ke baad nodes delete hoti jaa rhi hai so isse bachne k liye dynamic *n use karo jo ki jabtak dleete nhi hi ga jabtak hum dleete na kare.
    int response;
    while (response == 1)
    {                                   // coz hum baar bbar head to null nhi kr sakte
        Node *newNode = new Node(data); // crating our first node
                                        // next me default nlll ata hai
        if (head == NULL)               // hum ek baar hi head ko update krna chahte hai
        {
            head = newNode; // head me first node ka data enter bhi ho gya.
        }
        else
        { // ye bhi sirf second node tak chahiye hai uske baad hume head ke pte ko nhi beech ke node ka pointer ko link krna hai
            // head->next=newNode;//second time head null nh hai if skip hoga aur linking ho jayegi
            // head ko last tak move nhi karna hai
            Node *temp = head; // head ka addre cpoy kr diya temp pointer me
            while (temp->next != NULL)
            {                      // ab temp move karega aur temp destroy nhi hoga coz ye dynamic hai
                temp = temp->next; // ye tab hoga jab second wali thord se link ho jayegi
            }
            temp->next = newNode; // ye tab hoga jab temp ne abhi tak kisi ko link nhi kiya hai
        }
        printf("do you want new node? press 1 to add 0 to exit\n"); // ab ye firse while me chala jayega aur node banaega

        scanf("%d", &response);
        if (response == 1)
        {
        }
        else if (response == 0)
        { // zero ya kuch aur hu ato exit kr dega
            return head;
        }
        else
        {
            printf("Invalid request signing off\n");
            return head;
        }
    }
}
void print(Node *head) // argument is a node
{                      // traversing to print the ll
    while (head != NULL)
    {
        printf("%d", head->data);
        head = head->next;
    }
}
int main()
{
    Node *head = takeInput();
    print(head);

    return 0;
}